{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qait3\\\\react_course\\\\firts_react_app\\\\src\\\\components\\\\Character.js\",\n    _s = $RefreshSig$();\n\nimport Character from './Characters/Character';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Characters = () => {\n  _s();\n\n  const [data, setData] = useState({});\n  const [httpError, setHttpError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true); // async await\n\n  useEffect(() => {\n    const fecthCharacters = async () => {\n      const response = await fetch('https://swapi.dev/api/people');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const responseJSON = await response.json();\n      setData(responseJSON);\n      setIsLoading(false);\n    };\n\n    try {\n      fecthCharacters();\n    } catch (e) {\n      setIsLoading(false);\n      setHttpError(e.message);\n    }\n\n    fecthCharacters();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", httpError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Este es un componente para pruebas con un JSON\", /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Characters, \"+96rlXszm5s8VqEjnBp+/pcZNeA=\");\n\n_c = Characters;\nexport default Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"names":["Character","useEffect","useState","Characters","data","setData","httpError","setHttpError","isLoading","setIsLoading","fecthCharacters","response","fetch","ok","Error","responseJSON","json","e","message"],"sources":["C:/Users/qait3/react_course/firts_react_app/src/components/Character.js"],"sourcesContent":["\r\nimport Character from './Characters/Character';\r\n\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst Characters = () => {\r\n    \r\n    const [data, setData] = useState({})\r\n    const [httpError, setHttpError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    // async await\r\n    useEffect(()=> {\r\n        const fecthCharacters = async()=> {\r\n            const response = await fetch('https://swapi.dev/api/people')\r\n\r\n            if(!response.ok){\r\n                throw new Error('Something went wrong')\r\n            }\r\n            const responseJSON = await response.json();\r\n            setData(responseJSON)\r\n            \r\n            setIsLoading(false);\r\n\r\n        }\r\n        try{\r\n            fecthCharacters();\r\n        }catch(e){\r\n            setIsLoading(false)\r\n            setHttpError(e.message)\r\n        }\r\n        fecthCharacters()\r\n\r\n    },[])\r\n\r\n    if(isLoading){\r\n        return <section><p>Loading...</p></section>\r\n    }\r\n    if(httpError){\r\n        return <section><p>Error: {httpError}</p></section>\r\n    }\r\n    \r\n\r\n    return (\r\n        <div> \r\n            Este es un componente para pruebas con un JSON\r\n            <ul>\r\n                {/*data['results'].map(character => <Character item={character} key={character.name}></Character>)*/}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Characters"],"mappings":";;;AACA,OAAOA,SAAP,MAAsB,wBAAtB;AAEA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAGA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAErB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C,CAJqB,CAKrB;;EACAD,SAAS,CAAC,MAAK;IACX,MAAMS,eAAe,GAAG,YAAU;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;;MAEA,IAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;QACZ,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;MACH;;MACD,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;MACAX,OAAO,CAACU,YAAD,CAAP;MAEAN,YAAY,CAAC,KAAD,CAAZ;IAEH,CAXD;;IAYA,IAAG;MACCC,eAAe;IAClB,CAFD,CAEC,OAAMO,CAAN,EAAQ;MACLR,YAAY,CAAC,KAAD,CAAZ;MACAF,YAAY,CAACU,CAAC,CAACC,OAAH,CAAZ;IACH;;IACDR,eAAe;EAElB,CArBQ,EAqBP,EArBO,CAAT;;EAuBA,IAAGF,SAAH,EAAa;IACT,oBAAO;MAAA,uBAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAT;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EACD,IAAGF,SAAH,EAAa;IACT,oBAAO;MAAA,uBAAS;QAAA,sBAAWA,SAAX;MAAA;QAAA;QAAA;QAAA;MAAA;IAAT;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAGD,oBACI;IAAA,0EAEI;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,CA7CD;;GAAMH,U;;KAAAA,U;AA+CN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}