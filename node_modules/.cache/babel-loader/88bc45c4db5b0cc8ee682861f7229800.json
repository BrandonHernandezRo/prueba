{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qait3\\\\react_course\\\\firts_react_app\\\\src\\\\components\\\\Character.js\",\n    _s = $RefreshSig$();\n\nimport datas from '../data.json';\nimport Character from './Characters/Character';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Characters = () => {\n  _s();\n\n  const [data, setData] = useState();\n  const [httpError, setHttpError] = useState(); // async await\n\n  useEffect(() => {\n    const fecthCharacters = async () => {\n      const response = await fetch('https://swapi.dev/api/people');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const responseJSON = await response.json();\n      console.log(responseJSON);\n    };\n\n    fecthCharacters();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Este es un componente para pruebas con un JSON\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: datas['results'].map(character => /*#__PURE__*/_jsxDEV(Character, {\n        item: character\n      }, character.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 52\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Characters, \"QNTNopx49yW+JjF1/4V0EcaaFcA=\");\n\n_c = Characters;\nexport default Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"names":["datas","Character","useEffect","useState","Characters","data","setData","httpError","setHttpError","fecthCharacters","response","fetch","ok","Error","responseJSON","json","console","log","map","character","name"],"sources":["C:/Users/qait3/react_course/firts_react_app/src/components/Character.js"],"sourcesContent":["import  datas from '../data.json';\r\nimport Character from './Characters/Character';\r\n\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst Characters = () => {\r\n    \r\n    const [data, setData] = useState()\r\n    const [httpError, setHttpError] = useState(); \r\n    // async await\r\n    useEffect(()=> {\r\n        const fecthCharacters = async()=> {\r\n            const response = await fetch('https://swapi.dev/api/people')\r\n\r\n            if(!response.ok){\r\n                throw new Error('Something went wrong')\r\n            }\r\n            const responseJSON = await response.json();\r\n            console.log(responseJSON)   \r\n        }\r\n        fecthCharacters()\r\n\r\n    },[])\r\n    \r\n\r\n    return (\r\n        <div> \r\n            Este es un componente para pruebas con un JSON\r\n            <ul>\r\n                {datas['results'].map(character => <Character item={character} key={character.name}></Character>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Characters"],"mappings":";;;AAAA,OAAQA,KAAR,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAGA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAErB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,EAAhC;EACA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,EAA1C,CAHqB,CAIrB;;EACAD,SAAS,CAAC,MAAK;IACX,MAAMO,eAAe,GAAG,YAAU;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;;MAEA,IAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;QACZ,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;MACH;;MACD,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;MACAC,OAAO,CAACC,GAAR,CAAYH,YAAZ;IACH,CARD;;IASAL,eAAe;EAElB,CAZQ,EAYP,EAZO,CAAT;EAeA,oBACI;IAAA,0EAEI;MAAA,UACKT,KAAK,CAAC,SAAD,CAAL,CAAiBkB,GAAjB,CAAqBC,SAAS,iBAAI,QAAC,SAAD;QAAW,IAAI,EAAEA;MAAjB,GAAiCA,SAAS,CAACC,IAA3C;QAAA;QAAA;QAAA;MAAA,QAAlC;IADL;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,CA5BD;;GAAMhB,U;;KAAAA,U;AA8BN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}